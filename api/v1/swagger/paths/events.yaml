# =============================================================================
# Copyright (c) 2018, salesforce.com, inc.
# All rights reserved.
# Licensed under the BSD 3-Clause license.
# For full license text, see LICENSE.txt file in the repo root or
# https://opensource.org/licenses/BSD-3-Clause
# =============================================================================

# =============================================================================
# api/v1/swagger/paths/events.yaml
# =============================================================================
Events:
  x-swagger-router-controller: events
  get:
    security:
      - jwt: []
    summary: Find events
    tags: [ events ]
    operationId: findEvents
    description: >-
      All events are retrieved using this route and using the paramaters as filters you can focus on rooms, bots, or users.
    parameters:
      -
        name: roomId
        description: Get events from specific room
        in: query
        required: false
        type: integer
      -
        name: botId
        description: Get events from specific bot
        in: query
        required: false
        type: string
      -
        name: type
        description: Get events that are a specific type
        in: query
        required: false
        type: string
      -
        name: sort
        description: >
          Specify the sort order using a field name, e.g. '...?sort=createdAt'. Prepend the
          field name with a minus sign to specify descending order, e.g.
          '...?sort=-name'.
        in: query
        required: false
        type: string
      -
        name: botDataId
        description: Get events from specific botData
        in: query
        required: false
        type: string
      -
        name: botActionId
        description: Get events from specific botAction
        in: query
        required: false
        type: string
      -
        name: userId
        description: Get events from specific user
        in: query
        required: false
        type: string
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns all Events
        schema:
          type: array
          items:
            $ref: "#/definitions/EventResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

  post:
    security:
      - jwt: []
    summary: Create event
    tags: [ events ]
    description: >-
      Create a new event that can describe any action or information needed to be specifically logged,
      typically used to activity in rooms.
    operationId: postEvents
    parameters:
      -
        name: queryBody
        in: body
        required: true
        schema:
          type: object
          description: Create event properties
          properties:
            log:
              type: string
              description: Human readable log line to describe the context.
            context:
              type: object
              description: Any object, typically JSON, used to describe to some infomration that needed to be logged.
            roomId:
              type: integer
              description: Room that this event relates to.
            botId:
              type: string
              description: Bot that this event relates to.
            botDataId:
              type: string
              description: Bot Data that this event relates to.
            botActionId:
              type: string
              description: Bot Action that this event relates to.
            userId:
              type: string
              description: User that this event relates to.
          required:
            - log
    responses:
      201:
        description: >-
          Created event
        schema:
          $ref: "#/definitions/EventResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
EventsByID:
  x-swagger-router-controller: events
  get:
    security:
      - jwt: []
    summary: Get event
    tags: [ events ]
    description: >-
      This route is used to retrieve a single event.
    operationId: getEvent
    parameters:
      -
        name: key
        in: path
        description: >-
          The id the event to retrieve
        required: true
        type: string
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns specified event
        schema:
          $ref: "#/definitions/EventResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
