# =============================================================================
# Copyright (c) 2018, salesforce.com, inc.
# All rights reserved.
# Licensed under the BSD 3-Clause license.
# For full license text, see LICENSE.txt file in the repo root or
# https://opensource.org/licenses/BSD-3-Clause
# =============================================================================

# =============================================================================
# api/v1/swagger/paths/rooms.yaml
# =============================================================================
Rooms:
  x-swagger-router-controller: rooms
  get:
    security:
      - jwt: []
    tags: [ rooms ]
    operationId: findRooms
    parameters:
      -
        name: name
        description: Filter rooms by name
        in: query
        required: false
        type: string
      -
        name: active
        description: Filter rooms by active flag
        in: query
        required: false
        type: boolean
      -
        name: type
        description: Filter room by roomType
        in: query
        required: false
        type: string
      -
        name: sort
        description: >
          Specify the sort order using a field name, e.g. '...?sort=name'. Prepend the
          field name with a minus sign to specify descending order, e.g.
          '...?sort=-name'.
        in: query
        required: false
        type: string
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns all rooms
        schema:
          type: array
          items:
            $ref: "#/definitions/RoomResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

  post:
    security:
      - jwt: []
    summary: Create room
    tags: [ rooms ]
    description: Create a new room with a name
    operationId: postRooms
    parameters:
      -
        name: queryBody
        in: body
        required: true
        schema:
          type: object
          description: Create room properties
          properties:
            name:
              type: string
              maxLength: 254
              description: Name of the room
              pattern: ^[0-9A-Za-z_\\-]{0,60}$
            active:
              type: boolean
              description: If the room is active
            type:
              type: string
              maxLength: 254
              description: Name of the room
          required:
            - name
            - type
    responses:
      201:
        description: >-
          Created room
        schema:
          $ref: "#/definitions/RoomResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
RoomsByID:
  x-swagger-router-controller: rooms
  delete:
    security:
      - jwt: []
    summary: Delete room
    tags: [ rooms ]
    description: >-
      Delete a specific room
    operationId: deleteRooms
    parameters:
      -
        name: key
        in: path
        description: >-
          The id the room to retrieve
        required: true
        type: integer
    responses:
      200:
        description: >-
          Success, Deleted RoomType
        schema:
          $ref: "#/definitions/RoomResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

  get:
    security:
      - jwt: []
    summary: Get room
    tags: [ rooms ]
    operationId: getRoom
    parameters:
      -
        name: key
        in: path
        description: >-
          The id the room to retrieve
        required: true
        type: integer
      -
        name: active
        description: Get rooms depending on its active tag
        in: query
        required: false
        type: boolean
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns specified room
        schema:
          $ref: "#/definitions/RoomResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

  patch:
    security:
      - jwt: []
    summary: Update room (partial)
    tags: [ rooms ]
    description: Update room fields
    operationId: patchRoom
    parameters:
      -
        name: key
        in: path
        description: >-
          The id the room to retrieve
        required: true
        type: integer
      -
        name: queryBody
        in: body
        required: true
        schema:
          type: object
          description: Update specified room fields
          properties:
            name:
              type: string
              maxLength: 254
              description: Name of the room
              pattern: ^[0-9A-Za-z_\\-]{0,60}$
            active:
              type: boolean
              description: If the room is active
            type:
              type: string
              maxLength: 254
              description: Id of roomType
    responses:
      200:
        description: >-
          Updated field
        schema:
          $ref: "#/definitions/RoomResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
RoomWriters:
  x-swagger-router-controller: rooms
  delete:
    security:
      - jwt: []
    summary: Delete room writers
    tags: [ rooms ]
    description: >-
      Remove all users from a room's list of authorized writers.
    operationId: deleteRoomWriters
    parameters:
      -
        name: key
        in: path
        description: >-
           The id or name of the room.
        required: true
        type: string
    responses:
      204:
        description: >-
          The room is no longer write-protected.
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
  get:
    security:
      - jwt: []
    summary: Get room writers
    tags: [ rooms ]
    description: >-
      Get the list of all authorized writers for a room.
    operationId: getRoomWriters
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the room for which the authorized list of users
          are to be obtained.
        required: true
        type: string
    responses:
      200:
        description: >-
          Success, returns the users having write permission to the room.
        schema:
          type: array
          items:
            $ref: "#/definitions/UsersResponse"
            description: >-
              The users having write permission to the room
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
  post:
    security:
      - jwt: []
    summary: Add room writer
    tags: [ rooms ]
    description: >-
      Add one or more users to a room's list of authorized writers.
    operationId: postRoomWriters
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the room for which the authorized list of users
          are to be obtained.
        required: true
        type: string
      -
        name: queryBody
        description: Request body.
        in: body
        required: true
        schema:
          type: array
          items:
            type: string
          description: >
            User name
    responses:
      201:
        description: >-
          One or more of the valid users were added to the list of authorized writers.
        schema:
          type: array
          items:
            $ref: "#/definitions/RoomWriterResponse"
            description: >-
              The users having write permission to the room
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      404:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
RoomWritersByID:
  x-swagger-router-controller: rooms
  delete:
    security:
      - jwt: []
    summary: Delete rooms writer
    tags: [ rooms ]
    description: >-
      Remove a user from a room's list of authorized writers.
    operationId: deleteRoomWriter
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the rooms
        required: true
        type: string
      -
        name: userNameOrId
        in: path
        description: >-
          The username or the Id of the user
        required: true
        type: string
    responses:
      204:
        description: >-
          The userâ€™s write permission has been revoked for the room.
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
  get:
    security:
      - jwt: []
    summary: Get room writer
    tags: [ rooms ]
    description: >-
      Determine whether a user is an authorized writer for room.
    operationId: getRoomWriter
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the room for which the authorized list of users
          are to be obtained.
        required: true
        type: string
      -
        name: userNameOrId
        in: path
        description: >-
          The username or the Id of the user
        required: true
        type: string
    responses:
      200:
        description: >-
          Success, return authorized user
        schema:
          $ref: "#/definitions/UsersResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
RoomData:
  x-swagger-router-controller: botData
  get:
    security:
      - jwt: []
    summary: Get room bot data
    tags: [ rooms ]
    operationId: findBotData
    parameters:
      -
        name: roomId
        in: path
        description: >-
          The id of the room to retrieve bot data from
        required: true
        type: integer
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns specified bot data
        schema:
          type: array
          items:
            $ref: "#/definitions/BotDataResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
RoomDataByBot:
  x-swagger-router-controller: botData
  get:
    security:
      - jwt: []
    summary: Get room bot data
    tags: [ rooms ]
    operationId: findBotData
    parameters:
      -
        name: roomId
        in: path
        description: >-
          The id of the room to retrieve bot data from
        required: true
        type: integer
      -
        name: botId
        in: path
        description: >-
          The id of the bot which people want to reference
        required: true
        type: string
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns specified bot data
        schema:
          type: array
          items:
            $ref: "#/definitions/BotDataResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
