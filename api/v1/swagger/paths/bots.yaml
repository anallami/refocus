# =============================================================================
# Copyright (c) 2018, salesforce.com, inc.
# All rights reserved.
# Licensed under the BSD 3-Clause license.
# For full license text, see LICENSE.txt file in the repo root or
# https://opensource.org/licenses/BSD-3-Clause
# =============================================================================

# =============================================================================
# api/v1/swagger/paths/bots.yaml
# =============================================================================
Bots:
  x-swagger-router-controller: bots
  get:
    security:
      - jwt: []
    summary: Find bots
    tags: [ bots ]
    operationId: findBots
    parameters:
      -
        name: name
        description: Get bots by name
        in: query
        required: false
        type: string
      -
        name: active
        description: Get active bots
        in: query
        required: false
        type: boolean
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns all Bots
        schema:
          type: array
          items:
            $ref: "#/definitions/BotResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

  post:
    security:
      - jwt: []
    summary: Create bot
    tags: [ bots ]
    description: Create a new bot with a name
    operationId: postBots
    consumes:
      - multipart/form-data
    parameters:
      -
        name: name
        in: formData
        description: The unique readable name for the bot
        type: string
        required: true
        pattern: ^[0-9A-Za-z_\\-]{0,60}$
      -
        name: active
        in: formData
        description: Flag for if a bot is active with communication
        type: boolean
        default: false
      -
        name: url
        in: formData
        description: The URL of the code repository
        type: string
      -
        name: helpUrl
        in: formData
        description: The URL of the support documentation
        type: string
        required: false
      -
        name: ownerUrl
        in: formData
        description: The URL of the owner of the bot
        type: string
        required: false
      -
        name: ui
        description: The zipped HTML and Javascript needed to run the UI of the bot
        in: formData
        type: file
        format: binary
      -
        name: version
        in: formData
        description: The version of the bot. Use Semantic Versioning 2.0.0
        type: string
        required: true
      -
        name: displayName
        in: formData
        description: The name displayed in the bot header.
        type: string
        maxLength: 60
        required: false
      -
        name: actions
        in: formData
        description: Array of objects that contain the name of actions a bot can take and an array of parameters needed for that action
        type: array
        items:
          type: string
        default: []
      -
        name: data
        in: formData
        description: Array of objects that contain the name of data on a bot
        type: array
        items:
          type: string
        default: []
    responses:
      201:
        description: >-
          Created bot
        schema:
          $ref: "#/definitions/BotResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
BotsByID:
  x-swagger-router-controller: bots
  delete:
    security:
      - jwt: []
    summary: Delete bot
    tags: [ bots ]
    description: >-
      Delete a specific bot
    operationId: deleteBots
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot to delete.
        required: true
        type: string
    responses:
      200:
        description: >-
          Success, Deleted Bot
        schema:
          $ref: "#/definitions/BotResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

  get:
    security:
      - jwt: []
    summary: Get bot
    tags: [ bots ]
    operationId: getBot
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot to retrieve
        required: true
        type: string
      -
        name: name
        description: Get bot by name
        in: query
        required: false
        type: string
      -
        name: active
        description: Get bots depending on its active tag
        in: query
        required: false
        type: boolean
      -
        $ref: "#/parameters/limitParam"
      -
        $ref: "#/parameters/offsetParam"
    responses:
      200:
        description: >-
          Success, returns specified bot
        schema:
          $ref: "#/definitions/BotResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"

  patch:
    security:
      - jwt: []
    summary: Update bot (partial)
    tags: [ bots ]
    description: Update bot fields
    operationId: patchBot
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot to retrieve
        required: true
        type: string
      -
        name: queryBody
        in: body
        required: true
        schema:
          type: object
          description: Update specified bot fields
          properties:
            name:
              type: string
              maxLength: 254
              description: Name of the bot
              pattern: ^[0-9A-Za-z_\\-]{0,60}$
            url:
              type: string
              description: Bot url
            helpUrl:
              type: string
              description: Url of the support documentation for the bot
            ownerUrl:
              type: string
              description: Url of the owner of the bot
            active:
              type: boolean
              description: If the bot is active
            version:
              type: string
              description: The version of the bot. Use Semantic Versioning 2.0.0
            displayName:
              type: string
              maxLength: 60
              description: The name displayed in the bot header.
            actions:
              type: array
              description: Array of objects that contain the name of actions a bot can take and an array of parameters needed for that action
              items:
                type: object
            data:
              type: array
              description: Array of objects that contain the name of data on a bot
              items:
                type: object
    responses:
      200:
        description: >-
          Updated field
        schema:
          $ref: "#/definitions/BotResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

  put:
    security:
      - jwt: []
    summary: Upgrade bot (full)
    tags: [ bots ]
    description: This route is used to update all the fields in a bot and to load in a new UI
    operationId: putBots
    consumes:
      - multipart/form-data
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot to retrieve
        required: true
        type: string
      -
        name: name
        in: formData
        description: The unique readable name for the bot
        type: string
        pattern: ^[0-9A-Za-z_\\-]{0,60}$
      -
        name: active
        in: formData
        description: Flag for if a bot is active with communication
        type: boolean
        default: false
      -
        name: url
        in: formData
        description: The URL of the bot server
        type: string
      -
        name: helpUrl
        in: formData
        description: The URL of the support documentation
        type: string
      -
        name: ownerUrl
        in: formData
        description: The URL of the owner of the bot
        type: string
      -
        name: version
        in: formData
        description: The version of the bot. Use Semantic Versioning 2.0.0
        type: string
      -
        name: displayName
        in: formData
        description: The name displayed in the bot header.
        type: string
        maxLength: 60
      -
        name: ui
        description: The zipped HTML and Javascript needed to run the UI of the bot
        in: formData
        type: file
        format: binary
      -
        name: actions
        in: formData
        description: Array of objects that contain the name of actions a bot can take and an array of parameters needed for that action
        type: array
        items:
          type: string
        default: []
      -
        name: data
        in: formData
        description: Array of objects that contain the name of data on a bot
        type: array
        items:
          type: string
        default: []
    responses:
      201:
        description: >-
          Created bot
        schema:
          $ref: "#/definitions/BotResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------

BotHeartbeat:
  x-swagger-router-controller: bots
  post:
    security:
      - jwt: []
    summary: Send heartbeat
    tags: [ bots ]
    description: >-
      Send heartbeat.
    operationId: heartbeat
    parameters:
      -
        name: key
        in: path
        description: Key/Name of bot.
        required: true
        type: string
      -
        name: queryBody
        in: body
        required: true
        schema:
          type: object
          description: >-
            Heartbeat from the refocus.
          properties:
            timestamp:
              type: integer
    responses:
      200:
        description: Success.
      400:
        $ref: "#/responses/400"
      403:
        $ref: "#/responses/403"
      404:
          $ref: "#/responses/404"

# ---------------------------------------------------------------------------
BotWriters:
  x-swagger-router-controller: bots
  delete:
    security:
      - jwt: []
    summary: Delete bot writers
    tags: [ bots ]
    description: >-
      Remove all users from a bot's list of authorized writers.
    operationId: deleteBotWriters
    parameters:
      -
        name: key
        in: path
        description: >-
           The id or name of the bot.
        required: true
        type: string
    responses:
      204:
        description: >-
          The bot is no longer write-protected.
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
  get:
    security:
      - jwt: []
    summary: Get bot writers
    tags: [ bots ]
    description: >-
      Get the list of all authorized writers for a bot.
    operationId: getBotWriters
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot for which the authorized list of users
          are to be obtained.
        required: true
        type: string
    responses:
      200:
        description: >-
          Success, returns the users having write permission to the bot.
        schema:
          type: array
          items:
            $ref: "#/definitions/UsersResponse"
            description: >-
              The users having write permission to the subject
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
  post:
    security:
      - jwt: []
    summary: Add bot writer
    tags: [ bots ]
    description: >-
      Add one or more users to a bots list of authorized writers.
    operationId: postBotWriters
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot for which the authorized list of users
          are to be obtained.
        required: true
        type: string
      -
        name: queryBody
        description: Request body.
        in: body
        required: true
        schema:
          type: array
          items:
            type: string
          description: >
            User name
    responses:
      201:
        description: >-
          One or more of the valid users were added to the list of authorized writers.
        schema:
          type: array
          items:
            $ref: "#/definitions/BotWriterResponse"
            description: >-
              The users having write permission to the subject
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      404:
        $ref: "#/responses/403"
      default:
        $ref: "#/responses/genericError"

# ---------------------------------------------------------------------------
BotWritersByID:
  x-swagger-router-controller: bots
  delete:
    security:
      - jwt: []
    summary: Delete bot writer
    tags: [ bots ]
    description: >-
      Remove a user from a subjects's list of authorized writers.
    operationId: deleteBotWriter
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot
        required: true
        type: string
      -
        name: userNameOrId
        in: path
        description: >-
          The username or the Id of the user
        required: true
        type: string
    responses:
      204:
        description: >-
          The user’s write permission has been revoked for the subject.
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      403:
        $ref: "#/responses/403"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
  get:
    security:
      - jwt: []
    summary: Get bot writer
    tags: [ bots ]
    description: >-
      Determine whether a user is an authorized writer for bot.
    operationId: getBotWriter
    parameters:
      -
        name: key
        in: path
        description: >-
          The id or name of the bot for which the authorized list of users
          are to be obtained.
        required: true
        type: string
      -
        name: userNameOrId
        in: path
        description: >-
          The username or the Id of the user
        required: true
        type: string
    responses:
      200:
        description: >-
          Success, return authorized user
        schema:
          $ref: "#/definitions/UsersResponse"
      400:
        $ref: "#/responses/400"
      401:
        $ref: "#/responses/401"
      404:
        $ref: "#/responses/404"
      default:
        $ref: "#/responses/genericError"
